# Prometheus configuration file for Documents View feature
# Version: 2.45.0

global:
  scrape_interval: 15s      # How frequently to scrape targets
  evaluation_interval: 15s  # How frequently to evaluate rules
  scrape_timeout: 10s       # Timeout for scrape requests
  external_labels:
    monitor: 'documents-view-monitor'
    environment: '${ENVIRONMENT}'

# Configure remote write to Mimir for long-term storage
remote_write:
  - url: http://mimir:9009/api/v1/push
    headers:
      X-Scope-OrgID: 'documents-view'
    write_relabel_configs:
      # Only send relevant metrics to Mimir to reduce storage requirements
      - source_labels: ['__name__']
        regex: 'up|document_.*|metadata_.*|pdf_.*|http_.*|cache_.*|database_.*|active_users_.*|error_.*|slow_operation_.*'
        action: 'keep'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets: ['alertmanager:9093']

# Rule files for alerts and recording rules
rule_files:
  - '/etc/prometheus/rules/documents-view-alerts.yml'
  - '/etc/prometheus/rules/documents-view-recording.yml'

# Scrape configurations for the Documents View feature
scrape_configs:
  # Self-monitoring - scrape Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # Frontend component monitoring
  - job_name: 'documents-view-frontend'
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names: ['documents-view']
        selectors:
          - role: pod
            label: 'app=documents-view,component=frontend'
    relabel_configs:
      # Only scrape pods with prometheus.io/scrape=true annotation
      - source_labels: ['__meta_kubernetes_pod_annotation_prometheus_io_scrape']
        action: 'keep'
        regex: 'true'
      # Use custom metrics path if specified
      - source_labels: ['__meta_kubernetes_pod_annotation_prometheus_io_path']
        action: 'replace'
        target_label: '__metrics_path__'
        regex: '(.+)'
      # Set target address using the pod IP and metrics port
      - source_labels: ['__address__', '__meta_kubernetes_pod_annotation_prometheus_io_port']
        action: 'replace'
        regex: '([^:]+)(?::\d+)?;(\d+)'
        replacement: '$1:$2'
        target_label: '__address__'
      # Add namespace label
      - source_labels: ['__meta_kubernetes_namespace']
        action: 'replace'
        target_label: 'namespace'
      # Add pod name label
      - source_labels: ['__meta_kubernetes_pod_name']
        action: 'replace'
        target_label: 'pod'
      # Add app label
      - source_labels: ['__meta_kubernetes_pod_label_app']
        action: 'replace'
        target_label: 'app'
      # Add component label
      - source_labels: ['__meta_kubernetes_pod_label_component']
        action: 'replace'
        target_label: 'component'
      # Add environment label
      - action: 'replace'
        target_label: 'environment'
        replacement: '${ENVIRONMENT}'

  # Backend component monitoring
  - job_name: 'documents-view-backend'
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names: ['documents-view']
        selectors:
          - role: pod
            label: 'app=documents-view,component=backend'
    relabel_configs:
      # Only scrape pods with prometheus.io/scrape=true annotation
      - source_labels: ['__meta_kubernetes_pod_annotation_prometheus_io_scrape']
        action: 'keep'
        regex: 'true'
      # Use custom metrics path if specified
      - source_labels: ['__meta_kubernetes_pod_annotation_prometheus_io_path']
        action: 'replace'
        target_label: '__metrics_path__'
        regex: '(.+)'
      # Set target address using the pod IP and metrics port
      - source_labels: ['__address__', '__meta_kubernetes_pod_annotation_prometheus_io_port']
        action: 'replace'
        regex: '([^:]+)(?::\d+)?;(\d+)'
        replacement: '$1:$2'
        target_label: '__address__'
      # Add namespace label
      - source_labels: ['__meta_kubernetes_namespace']
        action: 'replace'
        target_label: 'namespace'
      # Add pod name label
      - source_labels: ['__meta_kubernetes_pod_name']
        action: 'replace'
        target_label: 'pod'
      # Add app label
      - source_labels: ['__meta_kubernetes_pod_label_app']
        action: 'replace'
        target_label: 'app'
      # Add component label
      - source_labels: ['__meta_kubernetes_pod_label_component']
        action: 'replace'
        target_label: 'component'
      # Add environment label
      - action: 'replace'
        target_label: 'environment'
        replacement: '${ENVIRONMENT}'
    # Filter metrics based on naming conventions
    metric_relabel_configs:
      - source_labels: ['__name__']
        regex: 'document_.*|metadata_.*|pdf_.*|http_.*|cache_.*|database_.*|active_users_.*|error_.*|slow_operation_.*'
        action: 'keep'

  # Database monitoring
  - job_name: 'documents-view-database'
    static_configs:
      - targets: ['mariadb-exporter:9104']
        labels:
          app: 'documents-view'
          component: 'database'
          environment: '${ENVIRONMENT}'

  # Redis cache monitoring
  - job_name: 'documents-view-redis'
    static_configs:
      - targets: ['redis-exporter:9121']
        labels:
          app: 'documents-view'
          component: 'cache'
          environment: '${ENVIRONMENT}'

  # Node monitoring for kubernetes nodes
  - job_name: 'documents-view-node'
    kubernetes_sd_configs:
      - role: node
    relabel_configs:
      # Add node name label
      - source_labels: ['__meta_kubernetes_node_name']
        action: 'replace'
        target_label: 'node'
      # Add environment label
      - action: 'replace'
        target_label: 'environment'
        replacement: '${ENVIRONMENT}'