# Mimir Configuration for Documents View
# Version: 2.x
# Purpose: Long-term metrics storage for LGTM monitoring stack

# Enable authentication for secure access
auth_enabled: true
multitenancy_enabled: true

# Server configuration
server:
  http_listen_port: 9009
  grpc_listen_port: 9095
  http_server_read_timeout: "30s"
  http_server_write_timeout: "30s"
  grpc_server_max_recv_msg_size: 4194304
  grpc_server_max_send_msg_size: 4194304

# Common configuration
common:
  storage:
    backend: filesystem
    filesystem:
      dir: /data/mimir
  replication_factor: 1
  ring:
    kvstore:
      store: inmemory

# Distributor configuration - handles incoming metrics
distributor:
  ring:
    kvstore:
      store: inmemory
  ha_tracker:
    enable_ha_tracker: true
    kvstore:
      store: inmemory
    update_timeout: "15s"
  shard_by_all_labels: true
  pool:
    health_check_ingesters: true

# Ingester configuration - writes metrics to storage
ingester:
  lifecycler:
    ring:
      kvstore:
        store: inmemory
      replication_factor: 1
    final_sleep: "0s"
    num_tokens: 512
  chunk_idle_period: "1h"
  chunk_retain_period: "30s"
  max_transfer_retries: 0
  wal:
    enabled: true
    dir: /data/mimir/wal
    flush_on_shutdown: true
  blocks_storage:
    tsdb:
      dir: /data/mimir/tsdb
      retention_period: "90d"
      ship_interval: "1m"
      head_compaction_interval: "1m"
      stripesize: 16384

# Blocks storage configuration - defines how metrics are stored
blocks_storage:
  backend: filesystem
  filesystem:
    dir: /data/mimir/blocks
  bucket_store:
    sync_dir: /data/mimir/tsdb-sync
    index_cache:
      backend: inmemory
      inmemory:
        max_size_bytes: 1073741824  # 1GB
    chunks_cache:
      backend: inmemory
      inmemory:
        max_size_bytes: 1073741824  # 1GB
    metadata_cache:
      backend: inmemory
      inmemory:
        max_size_bytes: 1073741824  # 1GB
  tsdb:
    dir: /data/mimir/tsdb
    block_ranges_period: ["2h", "12h", "24h"]
    retention_period: "90d"
    ship_interval: "1m"

# Compactor configuration - handles metric compression and cleanup
compactor:
  data_dir: /data/mimir/compactor
  sharding_ring:
    kvstore:
      store: inmemory
  compaction_interval: "30m"
  deletion_delay: "2h"
  block_retention: "90d"  # Default retention period
  tenant_cleanup_delay: "6h"

# Store gateway configuration
store_gateway:
  sharding_ring:
    replication_factor: 1
    kvstore:
      store: inmemory

# Ruler configuration - handles alerting rules
ruler:
  enable_api: true
  enable_alertmanager_v2: true
  alertmanager_url: http://alertmanager:9093
  ring:
    kvstore:
      store: inmemory
  rule_path: /data/mimir/rules
  storage:
    type: local
    local:
      directory: /data/mimir/rules
  evaluation_interval: "1m"

# Querier configuration - handles metric queries
querier:
  max_concurrent: 20
  query_timeout: "2m"
  engine:
    timeout: "3m"
    max_samples: 50000000
    max_lookback_period: "5m"

# Frontend configuration - handles API requests
frontend:
  log_queries_longer_than: "10s"
  compress_responses: true
  max_outstanding_per_tenant: 2048

# Frontend worker configuration
frontend_worker:
  frontend_address: 127.0.0.1:9095
  grpc_client_config:
    max_send_msg_size: 4194304

# Query range configuration
query_range:
  align_queries_with_step: true
  cache_results: true
  results_cache:
    cache:
      enable_fifocache: true
      fifocache:
        max_size_items: 1024
        validity: "24h"

# Limits configuration - resource constraints
limits:
  max_label_name_length: 1024
  max_label_value_length: 2048
  max_label_names_per_series: 30
  max_metadata_length: 1048576
  ingestion_rate: 40000
  ingestion_burst_size: 60000
  max_global_series_per_user: 1000000
  max_global_series_per_metric: 100000
  max_query_lookback: "90d"
  max_query_range: "31d"
  max_query_parallelism: 32
  cardinality_limit: 100000
  max_queries_per_tenant: 100
  ruler_max_rules_per_rule_group: 20
  ruler_max_rule_groups_per_tenant: 70
  per_tenant_override_config: /etc/mimir/tenant-limits.yaml
  per_tenant_override_period: "10s"
  # Tenant-specific retention period overrides
  retention_period_overrides:
    documents-view-critical: "365d"  # Critical metrics stored for a year
    documents-view-performance: "180d"  # Performance metrics stored for 6 months

# Analytics configuration
analytics:
  reporting_enabled: false

# Tenant federation configuration
tenant_federation:
  enabled: true
  tenant_federation_prefix: 'documents-view-'

# Activity tracker configuration
activity_tracker:
  filepath: /data/mimir/active-query-tracker

# Usage stats configuration
usage_stats:
  enabled: false

# Document View specific metric retention periods
metrics:
  retention_periods:
    - name: document_load_time_seconds
      description: Document load time metrics
      retention: "180d"
    - name: pdf_render_time_seconds
      description: PDF rendering time metrics
      retention: "180d"
    - name: api_response_time_seconds
      description: API response time metrics
      retention: "180d"
    - name: metadata_save_time_seconds
      description: Metadata save time metrics
      retention: "180d"
    - name: document_processing_time_seconds
      description: Document processing time metrics
      retention: "180d"
    - name: database_query_time_seconds
      description: Database query time metrics
      retention: "180d"
    - name: cache_hit_ratio
      description: Cache hit ratio metrics
      retention: "90d"
    - name: resource_utilization
      description: System resource utilization metrics
      retention: "90d"
    - name: error_rate
      description: Error rate metrics
      retention: "365d"
    - name: sla_compliance
      description: SLA compliance metrics
      retention: "365d"

# Integration points with other monitoring components
integration_points:
  - component: Prometheus
    purpose: Sends metrics to Mimir via remote_write
    configuration: Configured to send metrics with specific retention requirements
  - component: Grafana
    purpose: Queries metrics from Mimir
    configuration: Uses Prometheus-compatible API to query metrics stored in Mimir
  - component: Tempo
    purpose: Sends trace-derived metrics to Mimir
    configuration: Metrics generator sends service and span metrics to Mimir
  - component: Alertmanager
    purpose: Receives alerts from Mimir's ruler
    configuration: Processes alerts generated by Mimir's rule evaluation