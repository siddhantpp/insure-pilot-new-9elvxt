apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "documents-view.fullname" . }}
  labels:
    {{- include "documents-view.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "documents-view.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "documents-view.selectorLabels" . | nindent 8 }}
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "documents-view.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: frontend
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository.frontend }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          resources:
            {{- toYaml .Values.resources.frontend | nindent 12 }}
          env:
            - name: REACT_APP_API_URL
              value: /api
            - name: NODE_ENV
              value: production
        - name: backend
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository.backend }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: php-fpm
              containerPort: 9000
              protocol: TCP
          livenessProbe:
            exec:
              command: ["/usr/local/bin/health-check.sh"]
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command: ["/usr/local/bin/health-check.sh"]
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          resources:
            {{- toYaml .Values.resources.backend | nindent 12 }}
          env:
            - name: APP_ENV
              value: production
            - name: APP_DEBUG
              value: "{{ .Values.config.app_debug }}"
            - name: LOG_LEVEL
              value: "{{ .Values.config.log_level }}"
            - name: ADOBE_SDK_URL
              value: "{{ .Values.config.adobe_sdk_url }}"
            - name: DOCUMENT_VIEWER_ENABLED
              value: "{{ .Values.config.document_viewer_enabled }}"
            - name: DOCUMENT_VIEWER_MAX_FILE_SIZE
              value: "{{ .Values.config.document_viewer_max_file_size }}"
            - name: DOCUMENT_VIEWER_ALLOWED_TYPES
              value: "{{ .Values.config.document_viewer_allowed_types }}"
            - name: DOCUMENT_VIEWER_CACHE_TTL
              value: "{{ .Values.config.document_viewer_cache_ttl }}"
            - name: DOCUMENT_VIEWER_AUDIT_ENABLED
              value: "{{ .Values.config.document_viewer_audit_enabled }}"
            - name: DOCUMENT_STORAGE_PATH
              value: "{{ .Values.config.document_storage_path }}"
            - name: APP_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.secretNames.appSecrets }}"
                  key: APP_KEY
            - name: SENDGRID_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.secretNames.appSecrets }}"
                  key: SENDGRID_API_KEY
            - name: ADOBE_PDF_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.secretNames.appSecrets }}"
                  key: ADOBE_PDF_API_KEY
            - name: ADOBE_PDF_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.secretNames.appSecrets }}"
                  key: ADOBE_PDF_CLIENT_ID
            - name: LGTM_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.secretNames.appSecrets }}"
                  key: LGTM_API_KEY
            - name: ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.secretNames.appSecrets }}"
                  key: ENCRYPTION_KEY
            - name: DB_HOST
              value: "{{ .Values.database.host }}"
            - name: DB_PORT
              value: "{{ .Values.database.port }}"
            - name: DB_DATABASE
              value: "{{ .Values.database.name }}"
            - name: DB_USERNAME
              value: "{{ .Values.database.username }}"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.secretNames.database }}"
                  key: password
            - name: REDIS_HOST
              value: "{{ .Values.redis.host }}"
            - name: REDIS_PORT
              value: "{{ .Values.redis.port }}"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.secretNames.redis }}"
                  key: password
          volumeMounts:
            - name: document-storage
              mountPath: /var/www/storage/documents
              subPath: documents
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: document-storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.claimName }}