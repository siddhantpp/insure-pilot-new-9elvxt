@import "./variables.css";

/* Accessibility Mixins */
/* Mixins for improving accessibility */
@mixin focus-visible {
  outline: none;
  box-shadow: var(--shadow-focus);
  border-radius: var(--border-radius-sm);
}

@mixin focus-error {
  outline: none;
  box-shadow: var(--shadow-error);
  border-radius: var(--border-radius-sm);
}

@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@mixin screen-reader-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@mixin screen-reader-only-focusable {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;

  &:focus,
  &:active {
    position: static;
    width: auto;
    height: auto;
    overflow: visible;
    clip: auto;
    white-space: normal;
  }
}

/* Layout Mixins */
/* Mixins for common layout patterns */
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin absolute-fill {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

@mixin fixed-fill {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

/* Typography Mixins */
/* Mixins for text styling */
@mixin text-ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin multi-line-ellipsis($lines) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

@mixin heading-1 {
  font-size: var(--font-size-xxl);
  font-weight: var(--font-weight-bold);
  line-height: var(--line-height-sm);
}

@mixin heading-2 {
  font-size: var(--font-size-xl);
  font-weight: var(--font-weight-bold);
  line-height: var(--line-height-sm);
}

@mixin heading-3 {
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-semibold);
  line-height: var(--line-height-sm);
}

@mixin body-text {
  font-size: var(--font-size-base);
  font-weight: var(--font-weight-regular);
  line-height: var(--line-height-base);
}

@mixin small-text {
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-regular);
  line-height: var(--line-height-base);
}

/* Interactive Element Mixins */
/* Mixins for buttons, inputs, and other interactive elements */
@mixin button-reset {
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  color: inherit;
  cursor: pointer;
}

@mixin input-base {
  height: var(--input-height);
  padding: var(--input-padding);
  border: var(--border-width) var(--border-style) var(--color-border);
  border-radius: var(--border-radius-sm);
  font-size: var(--font-size-base);
  line-height: var(--line-height-base);
  color: var(--color-text-primary);
  background-color: var(--color-background);
  transition: border-color var(--transition-base), box-shadow var(--transition-base);
}

@mixin input-focus {
  outline: none;
  border-color: var(--color-primary);
  box-shadow: var(--shadow-focus);
}

@mixin input-error {
  border-color: var(--color-error);
  
  &:focus {
    box-shadow: var(--shadow-error);
  }
}

@mixin input-disabled {
  opacity: 0.6;
  cursor: not-allowed;
  background-color: var(--color-background-secondary);
}

/* Responsive Mixins */
/* Mixins for responsive design */
@mixin tablet {
  @media (max-width: var(--breakpoint-tablet)) {
    @content;
  }
}

@mixin mobile {
  @media (max-width: var(--breakpoint-mobile)) {
    @content;
  }
}

@mixin desktop-only {
  @media (min-width: calc(var(--breakpoint-tablet) + 1px)) {
    @content;
  }
}

@mixin tablet-only {
  @media (min-width: calc(var(--breakpoint-mobile) + 1px)) and (max-width: var(--breakpoint-tablet)) {
    @content;
  }
}

@mixin mobile-only {
  @media (max-width: var(--breakpoint-mobile)) {
    @content;
  }
}

/* Animation Mixins */
/* Mixins for animations and transitions */
@mixin fade-in {
  animation: fadeIn var(--transition-base) ease-in-out;
  
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
}

@mixin fade-out {
  animation: fadeOut var(--transition-base) ease-in-out;
  
  @keyframes fadeOut {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
    }
  }
}

@mixin slide-in-right {
  animation: slideInRight var(--transition-base) ease-in-out;
  
  @keyframes slideInRight {
    from {
      transform: translateX(100%);
    }
    to {
      transform: translateX(0);
    }
  }
}

@mixin slide-out-right {
  animation: slideOutRight var(--transition-base) ease-in-out;
  
  @keyframes slideOutRight {
    from {
      transform: translateX(0);
    }
    to {
      transform: translateX(100%);
    }
  }
}

/* UI State Mixins */
/* Mixins for different UI states */
@mixin loading-state {
  position: relative;
  pointer-events: none;
  
  &::after {
    content: '';
    @include absolute-fill;
    background-color: rgba(255, 255, 255, 0.7);
    z-index: 1;
  }
}

@mixin loading-spinner {
  position: relative;
  
  &::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 20px;
    height: 20px;
    border-radius: 50%;
    border: 2px solid var(--color-primary);
    border-top-color: transparent;
    animation: spin 0.8s linear infinite;
    z-index: 2;
  }
  
  @keyframes spin {
    from {
      transform: translate(-50%, -50%) rotate(0deg);
    }
    to {
      transform: translate(-50%, -50%) rotate(360deg);
    }
  }
}

@mixin error-state {
  border-color: var(--color-error);
  background-color: var(--color-error-light);
}

@mixin success-state {
  border-color: var(--color-success);
  background-color: var(--color-success-light);
}

/* Document Viewer Specific Mixins */
/* Mixins specific to the Documents View feature */
@mixin document-panel {
  background-color: var(--color-background);
  border-radius: var(--border-radius-md);
  box-shadow: var(--shadow-md);
  overflow: hidden;
}

@mixin metadata-field {
  margin-bottom: var(--spacing-md);
  
  &:last-child {
    margin-bottom: 0;
  }
}

@mixin history-item {
  padding: var(--history-item-padding);
  border-bottom: var(--history-item-border);
  
  &:last-child {
    border-bottom: none;
  }
}

@mixin pdf-controls {
  height: var(--pdf-controls-height);
  background-color: rgba(255, 255, 255, 0.9);
  border-top: 1px solid var(--color-border);
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--spacing-md);
}